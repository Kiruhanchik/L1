let count = 0;

const callStackSize = () => {     // у меня есть возможность проверить только на работе Хрома. Размер коллстека позволяет определить насколько большой может 
    count += 1;                 // быть вложенность вызовов, чтобы не появилась ошибка переполненности стека. Чтобы это проверить, я написал рекурсивную функцию в блоке try - catch;
    callStackSize();           // и ответ вышел - 13956 вызовов. Это результат в ноде, а в самом Хроме будет 13916 вызовов. Так же, размер коллстека зависит от переменных внутри рекурсивной функции.
}                              // чем тяжелее функция, тем меньшее количество вызовов мы можем сделать. Плюс в разных браузерах будет разный размер стека

try {
    callStackSize();
} catch (err) {
    console.log(count + ' вызовов функции');
    console.log('размер коллстека в Chrome ' + (72 + (0 * 8)) * count + ' байт'); // получилось, что размер коллстека в Хроме 1001952 байт
}